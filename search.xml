<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[CSS的使用]]></title>
      <url>%2F2017%2F02%2F27%2FCSS%E7%9A%84%E4%BD%BF%E7%94%A8%2F</url>
      <content type="text"><![CDATA[CSS是学习前端的基础知识，但它却蕴含着复杂的调理。即使它很容易去学，但却有不容易去掌握。本篇主要实现一些基本的CSS技巧，提供参考。 点赞先上图现在来具体实现 .stars { width:100%; unicode-bidi: bidi-override; direction: rtl; text-align: center; } .stars &gt; span { display: inline-block; position: relative; width: 1.1em; font-size: 30px; color:#FFF310; } .stars &gt; span:hover:before, .stars &gt; span:hover ~ span:before { content: &quot;\2605&quot;; position: absolute; } 方向箭头方向箭头核心就是利用border制作而成。demo border: 20px solid #9C27B0; border-color: transparent transparent transparent #27F2B2; 阴影基本语法 box-shadow:[inset] x-offset y-offset blur-radius spread-radius color Tips: 阴影模糊半径：此参数可选，其值只能是为正值，如果其值为0时，表示阴影不具有模糊效果，其值越大阴影的边缘就越模糊；阴影扩展半径：此参数可选，其值可以是正负值，如果值为正，则整个阴影都延展扩大，反之值为负值时，则缩小。 #n_{ box-shadow:0 -5px 15px red ; } #s_{ box-shadow:0 5px 15px red ; } #l_{ box-shadow:-5px 0 15px red ; } #r_{ box-shadow:5px 0 15px red ; } 居中对齐定宽块级元素的水平居中 .box1 { width:100px; height: 100px; margin:0 auto; } 定宽高，通过负外边距和绝对定位块级元素水平/垂直居中 .box2 { position: absolute; width: 100px; height: 100px; left: 50%; top: 50%; margin-left: -50px; margin-top: -50px; } 定宽高，通过margin:auto和绝对定位实现的块级元素水平/垂直居中 .box3 { position: absolute; margin: auto; left: 0; top: 0; bottom: 0; right: 0; width: 100px; height: 100px; } 通过css3的flex布局实现水平/垂直居中 .flexcontainer { display: flex; justify-content: center; align-items: center; /*对包围box的容器设置的css*/ } 通过css3的transform属性实现居中 .box5 { position: absolute; width: 100px; height: 100px; top: 50%; left: 50%; transform: translate(-50%,-50%); } 通过display:table-cell实现居中 .tablecontainer { display: table; } .box6 { display: table-cell; vertical-align: middle; text-align: center; width: 100px; height: 100px; } 通过inline-block实现水平居中 .container { text-align: center; } .box7 { display: inline-block; width: 100px; height: 100px; } 截断文字 将一定长度以省略号显示.text { white-space:nowrap; /* 强制不换行 */ width:100px; /* 定宽 */ overflow:hidden; /* 超出部分隐藏 */ text-overflow: ellipsis; /* 超出部分省略号 */ }]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[圈美剧]]></title>
      <url>%2F2017%2F02%2F17%2F%E5%9C%88%E7%BE%8E%E5%89%A7%2F</url>
      <content type="text"><![CDATA[美剧是世界的美剧美剧的世界总是一年又一年，把记忆埋在土里，然后突然有一天再翻出来看看，会发现，时间真的好快。那些所陪伴你成长的总是最有趣的。在2016年，我认为最狗血的剧情就落在了 血族 上了，当黄土遮天，（咳咳，为了不剧透，就当那是黄土吧。）我的心都蒙上了一层厚厚的灰，这怎么有点像 僵尸国度 的结局呢？当与自己本以为这一季就可以是本剧的终章是，而导演总是不乐意，就挖了一个巨坑，拉长整个剧情线，所以现在就又期待暑假早点来吧。 本以为2016不会再有什么好的剧可以追时，HBO就出了 西部世界 ，但编剧的思维是真的搞不懂。当然了，本剧的剧情难度是要比 黑客军团 简单很多，像黑客的世界也真不是一般人能看懂的。 所以总得来说，西部世界还是值得去看的一部剧，毕竟，里面的人物和场景都比较西部，个个都是牛仔，个个都只喝牛奶。慢慢的就到了年末，有一天在人人里发现了一部也是刚更新的美剧，名字叫 生死狙击 ，等等，有人可能会想到那部同名电影，恭喜你，没错，就是那部电影，剧情几乎一模一样，所以看看会不会有第二季，因为第一季也没什么特别点。所以这部生死狙击也就无力让你去吐槽了，紧接着 海豹六队 的更新，我疯了，怎么一到2016年底，美剧到处都是子弹，怎么躲都躲不过去，所以我就追了。海豹六队讲的并不是本拉登，而是一群硬汉子突然纠结自己所做的事业是对还是错，突然发现自己的生活因为这份工作变得雪上加霜。海豹六队现在才更新五集，感兴趣的可以攒一攒，囤起来之后看，就像我囤着 神盾局特工 。当2016翻篇后，2017也又接来了一些重头剧，首当其冲的就是 国土安全第五季 ,我可能永远不会忘了在第四季最后的那个病房，发生了……（不能透，不能透） 所以就十分期待第五季，可当第五季来了，当我追了这几个星期后，我真的想爆粗口，这女猪脚真的是神经病啊，喜欢怎么不去追啊！（嗯蒽，好像漏了些）当然了并不是因为这个原因就想爆粗口，其实更多的是她在剧中的一些选择会让人很奇怪，甚至是有时候会觉得她真的是病了，而从第一季到第四季，她都一直都处于一种病态当中，也正是这种状态让她一次次创造了奇迹，所以第五季里，她不会死吧？17年四月，又将会让人兴奋起来， 越狱 的回归，也是我所期待的，其实在越狱整部剧里，除了米勒，我最喜欢的还是T-bag,有人会说他阴险奸诈，但谁能阴险过迈克尔呢，其实他是挺可怜的. 本篇博文是满满的都是推荐，所以不发表过多的评论。以下为人人链接 海豹六队第一季 国土安全第六季 神盾局特工第四季 西部世界第一季 血族第三季 黑客军团第一季 僵尸国度第一季]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[About 2017]]></title>
      <url>%2F2017%2F02%2F07%2FAbout2017%2F</url>
      <content type="text"><![CDATA[关于2017时间就这么快，年就这样的过完了，而我的2017也这样开始着。在这里也该为这一年做个打算。 关于前端作为一个新人，对于发生在2016年前端的一些事曾在社区里看过，总得感觉前端的发展好快，各种新的技术，各种新的想法，让我越来越喜欢前端，或者说是让我很好奇它，我想着当我真的熟悉使用那些技术而会做些什么呢？前端，一个神奇的技术领域。2016年当把”Javascript 高级程序设计”看了一遍，我就是在想Javescript能做些什么？ 事件的监听和操作 做动画，虽然已经有了CSS3，但还能用在做帧动画。 canvas的操作 设备的识别 数据的提交和验证 控制cookie 所以当这一遍看完，我总觉得为什么 Javascript 并不是那么的优秀，但整个前端却又不能少了它。所以在2017，我想好好研究它，想深入的学习和掌握它。我觉的当js使用熟悉后，jq会学起来更轻松些，这也在不断学习中。 在2017里计划学习 React.js Sass 前端自动化 如果可以再学学Photoshop 关于实习2017年底，自己也就可以实习了，会很期待，所以想要努力做好自己想要做的，然后找到一份好工作。会很激动，自己会拿到人生的第一桶金，然后真正的自己独立。自己很好奇后端数据和前端页面到底是怎么相互传递的，所以自己的前端路还有着很长一段路需要我去踩点和学习。 2017，一个开始，一个结束。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello HEXO(二)]]></title>
      <url>%2F2017%2F01%2F31%2Fhello-hexo-2%2F</url>
      <content type="text"><![CDATA[当你的blog成功上传至仓库，剩下主要的问题就是配置一些个性化的主题项和功能项。现在我们就开始吧！ 主题配置（NexT） 首先下载你喜欢的主题至你的themes文件夹下，可以在git bash里clone，或者直接在github里直接下载压缩包。（个人建议，直接在github上下载，不会太费时间） 打开themes下的_config.yml，有着很多的配置，我会尽可能的详细。 Logo的设置 通过在线icon制作一个favicon.ico 将其保存在将图片放在next主题source/images目录下 favicon: images/favicon.ico 头像的设置 在主题_config里设置avatar: 的值。其值设置成头像的链接地址。 第三方服务例如：多说评论、不蒜子统计、站内搜索，分享…. 多说使用多说前需要先在 多说 创建一个站点。具体步骤如下： 登录后在首页选择 “我要安装”。创建站点，填写表单。多说域名 这一栏填写的即是你的 duoshuo_shortname，如图： 创建站点完成后在 站点配置文件 中新增 duoshuo_shortname 字段，值设置成上一步中的值。 详细教程点这里 不蒜子统计两行代码轻松解决，参考不蒜子 404页面腾讯公益 404.html : &lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;404&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;br&gt;&lt;!-- &lt;!DOCTYPE HTML&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;title&gt;公益404 | 不如&lt;/title&gt; &lt;/head&gt; &lt;body&gt; #404 Not found By Bruce &lt;h1&gt;404 Page Not Found&lt;/h1&gt; --&gt;&lt;br&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;http://www.qq.com/404/search_children.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;br&gt;&lt;!-- 公益404介接入地址 益云公益404 http://yibo.iyiyun.com/Index/web404 腾讯公益404 http://www.qq.com/404 失蹤兒童少年資料管理中心404 http://404page.missingkids.org.tw --&gt; &lt;br&gt; &lt;/body&gt; &lt;/html&gt; 复制上面代码，贴粘到主题目录source下新建的404.html即可！ 添加about页面hexo new page “about”在source文件夹下就会有about文件夹，编辑index.md，然后进入主题的_config.yml中，menu下的#about注释去掉 添加tag/categories页面hexo new page &quot;tags&quot;hexo new page &quot;categories&quot;设置同上，调整菜单顺序。 总结关于HEXO建站，有很多教程，还有很多方面需要你自己研究尝试。总得来说，我在，我开心。也算是自己的一个尝试。 推荐文章玩转hexo博客之nextNexT官方文档Hexo 优化与定制(二)NexT主题的Hexo优化（SEO篇）]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello HEXO]]></title>
      <url>%2F2017%2F01%2F30%2Fhello-hexo-1%2F</url>
      <content type="text"><![CDATA[迎着新年，终于在这里插下我的第一篇博文，实在令人兴奋不已，其实在这个过程中，经历了许许多多的trouble,之后踩着坑，一步步搞出来。介绍一下，我呢叫CC，一名前端小生，想要快快的实习工作，学到更多的经验和技能。So，在以后的日子里，我会写一些自己感觉有趣的博文，不论如何，这里是我的一个小小的bay。alert(“Hello world”); HEXO在第一篇里，肯定会说一说hexo的。 准备工作 安装node.js，git和申请github账号，这些是必要配置，网上有很多的教程可以去参考，所以这里就略过…. 开始安装HEXO npm install hexo -g；新建一个文件，就叫blogs吧，在blogs下用命令行 hexo init ；其文件结构如图 生成、部署页面 如果到这里，你可以小小的得意一下，接下来测试页面；再回到git命令行,依次敲下hexo g hexo s,然后游览器地址栏http://localhost:4000,当你看到了HEXO，那就成功了一大步。在HEXO有许多优秀的的主题，具体在这里，我用的是NexT，它们都有着详细的使用手册。下来就着重是_config.yml的配置问题。首先就要搞的是deploy. 如图 之后就可以提交么？ no，当然不行。 在你生成SSH秘钥之前,如果你有任意一个SSH秘钥,你都要检测一下; 第一步 检测电脑中是否已有SSH 秘钥检测步骤: 在任意目录右键,选择 Git Bash 输入 ls -al ~/.ssh 命令查看是否存在SSH秘钥 ls -al ~/.ssh 如果你看到有公共的SSH秘钥已经存在的话,请检测SSH列表的路径;默认情况下,公共秘钥的文件名是下列之一: id_dsa.pubid_ecdsa.pubid_ecdsa.pubid_ecdsa.pub 如果没有一个现有的公共和私有密钥，或者不希望使用任何可用的SSH秘钥来连接到GitHub上，请生成一个新的SSH密钥。如果你看到列出现有的公共和私有密钥（例如id_rsa.pub和id_rsa ），你想使用连接到GitHub上，你可以将你的SSH密钥放到ssh-agent(下面会写到) . 小贴士:如果你看到的〜/ .ssh不存在或者错误，不要担心！我们将创建它，并生成一个新的SSH密钥 第二步生成新的SSH密钥并将其添加到ssh-agent中在任意目录右键,选择Git Bash 输入ssh-keygen -t rsa -b 4096 -C “your_email@example.com” (将邮箱替换为你自己的地址) 当你提示“输入要保存密钥的文件”，然后按Enter键。接受默认文件位置。Enter a file in which to save the key (/Users/you/.ssh/id_rsa): [Pressenter] 在提示符下，键入一个安全密码(可以为空)。有关详细信息，请参阅“使用SSH密钥口令”一节。Enter passphrase (empty for no passphrase): [Type a passphrase]Enter same passphrase again: [Type passphrase again] 将ssh秘钥添加到 ssh-agent,在任意目录右键,选择Git Bash后输入命令确保ssh-agent的启用 $ eval &quot;$(ssh-agent -s)&quot; Agent pid 59566 添加你的SSH密钥到ssh-agent 。如果你使用现有的SSH密钥，而不是生成新的SSH密钥，你需要替换现有的私有密钥文件的名称，以取代id_rsa的命令。 $ ssh-add ~/.ssh/id_rsa 添加新的SSH密钥到你的帐户GitHub中 要配置GitHub的帐户需要使用新的（或现有的） SSH密钥，你还需要将其添加到你的帐户GitHub中。 5.复制SSH密钥到剪贴板小贴士:如果你的SSH密钥文件具有与示例代码不同的名称，请修改文件名，以符合当前的设置。当复制你的秘钥时，不添加任何新行或空格。 $ clip &lt; ~/.ssh/id_rsa.pub 小贴士:如果clip命令没有执行，你可以找到隐藏的.ssh文件夹中，打开你喜欢的文本编辑器文件，并将其复制到剪贴板,一般是在C:\Users\yourname.ssh文件夹下的id_rsa.pub文件中,使用文本文档打开后复制内容即可 用户头像→Settings→SSH and GPG keys→New SSH key→将id_rsa.pub中的内容复制到Key文本框中，然后点击Add SSH key(添加SSH)按钮。 添加一个ssh key. 测试SSH秘钥是否添加成功 打开git bash 输入命令： ssh -T git@github.com当提示到： Hi username! You’ve successfully authenticated, but GitHub does notprovide shell access. 那就成功了，然后上传试试。 第三步 上传至github在blogs下git bash中输入： hexo d(deploy)当看到git done那就成功了。至此，你已经走过了一大半的路了 以上 ssh key部分来源这里，剩下的之后补充。]]></content>
    </entry>

    
  
  
</search>
